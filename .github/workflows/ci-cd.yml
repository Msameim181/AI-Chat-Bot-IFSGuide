name: CI/CD Workflow

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Create .env files
      run: |
        echo "DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY" >> src/config_files/database.env
        echo "DEBUG=True" >> src/config_files/database.env
        echo "POSTGRES_DB=chatbot" >> src/config_files/database.env
        echo "POSTGRES_USER=root" >> src/config_files/database.env
        echo "POSTGRES_PASSWORD=root" >> src/config_files/database.env
        echo "POSTGRES_HOST=$POSTGRES_HOST" >> src/config_files/database.env
        echo "POSTGRES_PORT=65432" >> src/config_files/database.env

        echo "SERVICE_HOST=0.0.0.0" >> src/config_files/service.env
        echo "SERVICE_PORT=6601" >> src/config_files/service.env
        echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> src/config_files/service.env

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Build and run Docker image
      run: |
        docker network create ai_chat_bot_service_network
        docker pull postgres:latest
        docker build . -t ai_chat_bot_service:latest
        docker compose up -d
